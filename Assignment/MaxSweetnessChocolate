int main() {
    int T;
    cin>>T;
    while(T--){
        int n;
        long long max1=0;
        cin>>n;
        int a[n];
        long long b[n]{0};
       
        for(int i=0;i<n;i++){
            cin>>a[i];
        }
        b[0]=a[0];
        b[1]=a[1];
        for(int i=2;i<n;i++){
            if(i-3>=0) if(b[i-3]>max1) max1=b[i-3];
            if(b[i-2]>max1) b[i] = b[i-2] + a[i];
            else b[i] = a[i] + max1;
        }
       
        if(n==1) cout<<a[n-1]<<endl;
        else cout<<max(b[n-1],b[n-2])<<endl;
    }
    return 0;
}


#By Recursion
import sys
sys.setrecursionlimit(int(1e9))
t=int(input())
def swt(arr,i,n,memo):
    if i in memo:
        return memo[i]
    if i>=n:
        return 0
    else:
        memo[i]=max(arr[i]+swt(arr,i+2,n,memo),swt(arr,i+1,n,memo))
        return memo[i]
for i in range(t):
    n=int(input())
    arr=list(map(int, input().split()))
    memo=dict()
    ans=swt(arr,0,n,memo)
    print(ans)
